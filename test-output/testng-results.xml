<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="8" ignored="0" total="20" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteRegression" duration-ms="39076737" started-at="2018-08-16T14:23:37Z" finished-at="2018-08-17T01:14:53Z">
    <groups>
    </groups>
    <test name="test" duration-ms="39076737" started-at="2018-08-16T14:23:37Z" finished-at="2018-08-17T01:14:53Z">
      <class name="aut.tests.functionaltests.PhysicianPortalTestCases">
        <test-method status="PASS" signature="beforeSuite(org.testng.ITestContext, org.testng.xml.XmlTest)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeSuite" is-config="true" duration-ms="147" started-at="2018-08-16T19:53:36Z" finished-at="2018-08-16T19:53:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Test: "test" verbose:1[parameters:][metagroups:] [included: ][excluded: ]  classes: packages:] ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(org.testng.ITestContext)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-08-16T19:53:37Z" finished-at="2018-08-16T19:53:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="36340" started-at="2018-08-16T19:53:37Z" finished-at="2018-08-16T19:54:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA007_ResidentOrders() throws java.net.URISyntaxException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA007_ResidentOrders()[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA007_ResidentOrders" duration-ms="102252" started-at="2018-08-16T19:54:13Z" finished-at="2018-08-16T19:55:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA007_ResidentOrders -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5796" started-at="2018-08-16T19:55:55Z" finished-at="2018-08-16T19:56:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA007_ResidentOrders status=SUCCESS method=PhysicianPortalTestCases.QA007_ResidentOrders()[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA007_ResidentOrders() throws java.net.URISyntaxException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35189" started-at="2018-08-16T19:56:01Z" finished-at="2018-08-16T19:56:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder" duration-ms="599814" started-at="2018-08-16T19:56:36Z" finished-at="2018-08-16T20:06:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5592" started-at="2018-08-16T20:06:36Z" finished-at="2018-08-16T20:06:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder status=SUCCESS method=PhysicianPortalTestCases.QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA022_SignAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35143" started-at="2018-08-16T20:06:42Z" finished-at="2018-08-16T20:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA008_ResidentOrders_CreateAnOrder(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA008_ResidentOrders_CreateAnOrder(org.testng.ITestContext)[pri:2, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA008_ResidentOrders_CreateAnOrder" duration-ms="731996" started-at="2018-08-16T20:07:17Z" finished-at="2018-08-16T20:19:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA008_ResidentOrders_CreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5586" started-at="2018-08-16T20:19:29Z" finished-at="2018-08-16T20:19:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA008_ResidentOrders_CreateAnOrder status=SUCCESS method=PhysicianPortalTestCases.QA008_ResidentOrders_CreateAnOrder(org.testng.ITestContext)[pri:2, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA008_ResidentOrders_CreateAnOrder(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="36584" started-at="2018-08-16T20:19:34Z" finished-at="2018-08-16T20:20:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)[pri:3, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine" duration-ms="997450" started-at="2018-08-16T20:20:11Z" finished-at="2018-08-16T20:36:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5591" started-at="2018-08-16T20:36:48Z" finished-at="2018-08-16T20:36:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine status=SUCCESS method=PhysicianPortalTestCases.QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)[pri:3, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA009_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="38551" started-at="2018-08-16T20:36:54Z" finished-at="2018-08-16T20:37:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)[pri:4, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine" duration-ms="13017341" started-at="2018-08-16T20:37:32Z" finished-at="2018-08-17T00:14:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="6087" started-at="2018-08-17T00:14:30Z" finished-at="2018-08-17T00:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine status=SUCCESS method=PhysicianPortalTestCases.QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)[pri:4, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA010_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="41716" started-at="2018-08-17T00:14:36Z" finished-at="2018-08-17T00:15:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA011_HowOften_RoutineFrequencyType() throws java.net.URISyntaxException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA011_HowOften_RoutineFrequencyType()[pri:5, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA011_HowOften_RoutineFrequencyType" duration-ms="885273" started-at="2018-08-17T00:15:18Z" finished-at="2018-08-17T00:30:03Z">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[Element is no longer valid
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:18089/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 6cac9b64-2b8f-429a-960b-a5aff84e64aa]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: Element is no longer valid
For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:18089/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 6cac9b64-2b8f-429a-960b-a5aff84e64aa
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
	at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:118)
	at dweb.aut.pages.templates.PageTemplate.SendKeysToElementClearFirst(PageTemplate.java:525)
	at aut.bluestrata.pages.PhysicianPortalPage.RequireActionRelatedLabel(PhysicianPortalPage.java:1642)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA011_HowOften_RoutineFrequencyType(PhysicianPortalTestCases.java:491)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA011_HowOften_RoutineFrequencyType -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="6669" started-at="2018-08-17T00:30:03Z" finished-at="2018-08-17T00:30:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA011_HowOften_RoutineFrequencyType status=FAILURE method=PhysicianPortalTestCases.QA011_HowOften_RoutineFrequencyType()[pri:5, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA011_HowOften_RoutineFrequencyType() throws java.net.URISyntaxException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="37939" started-at="2018-08-17T00:30:10Z" finished-at="2018-08-17T00:30:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)[pri:6, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN" duration-ms="874801" started-at="2018-08-17T00:30:48Z" finished-at="2018-08-17T00:45:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="6391" started-at="2018-08-17T00:45:22Z" finished-at="2018-08-17T00:45:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN status=SUCCESS method=PhysicianPortalTestCases.QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)[pri:6, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA012_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="36356" started-at="2018-08-17T00:45:29Z" finished-at="2018-08-17T00:46:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)[pri:7, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour" duration-ms="894836" started-at="2018-08-17T00:46:05Z" finished-at="2018-08-17T01:01:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="6625" started-at="2018-08-17T01:01:00Z" finished-at="2018-08-17T01:01:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour status=SUCCESS method=PhysicianPortalTestCases.QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)[pri:7, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA013_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35930" started-at="2018-08-17T01:01:07Z" finished-at="2018-08-17T01:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA014_ResidentOrders_CreateAnOrder(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA014_ResidentOrders_CreateAnOrder(org.testng.ITestContext)[pri:8, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA014_ResidentOrders_CreateAnOrder" duration-ms="3374331" started-at="2018-08-17T01:01:43Z" finished-at="2018-08-17T01:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA014_ResidentOrders_CreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="40235" started-at="2018-08-17T01:57:57Z" finished-at="2018-08-17T01:58:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA014_ResidentOrders_CreateAnOrder status=SUCCESS method=PhysicianPortalTestCases.QA014_ResidentOrders_CreateAnOrder(org.testng.ITestContext)[pri:8, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA014_ResidentOrders_CreateAnOrder(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35774" started-at="2018-08-17T01:58:37Z" finished-at="2018-08-17T01:59:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)[pri:9, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine" duration-ms="1058683" started-at="2018-08-17T01:59:13Z" finished-at="2018-08-17T02:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5899" started-at="2018-08-17T02:16:52Z" finished-at="2018-08-17T02:16:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine status=SUCCESS method=PhysicianPortalTestCases.QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)[pri:9, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA015_ResidentOrders_CreateAnOrderWithFrequencyRoutine(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="40609" started-at="2018-08-17T02:16:58Z" finished-at="2018-08-17T02:17:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)[pri:10, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour" duration-ms="712843" started-at="2018-08-17T02:17:38Z" finished-at="2018-08-17T02:29:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5943" started-at="2018-08-17T02:29:31Z" finished-at="2018-08-17T02:29:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour status=SUCCESS method=PhysicianPortalTestCases.QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)[pri:10, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA016_ResidentOrders_CreateAnOrderWithFrequencyPRNEveryHour(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35641" started-at="2018-08-17T02:29:37Z" finished-at="2018-08-17T02:30:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)[pri:11, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN" duration-ms="710555" started-at="2018-08-17T02:30:13Z" finished-at="2018-08-17T02:42:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5916" started-at="2018-08-17T02:42:03Z" finished-at="2018-08-17T02:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN status=SUCCESS method=PhysicianPortalTestCases.QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)[pri:11, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA017_ResidentOrders_CreateAnOrderWithFrequencyPRN(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35505" started-at="2018-08-17T02:42:09Z" finished-at="2018-08-17T02:42:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA018_CreateAnOrder_ViaOrderSets(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA018_CreateAnOrder_ViaOrderSets(org.testng.ITestContext)[pri:12, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA018_CreateAnOrder_ViaOrderSets" duration-ms="113062" started-at="2018-08-17T02:42:45Z" finished-at="2018-08-17T02:44:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with xpath == //datatable-scroller[@class='datatable-scroll ng-star-inserted']//span[text()='Amoxicillin 875 MG Tablet']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:36750/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: acaf2812-690c-4eea-bcb4-b38b1f67f443
*** Element info: {Using=xpath, value=//datatable-scroller[@class='datatable-scroll ng-star-inserted']//span[text()='Amoxicillin 875 MG Tablet']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //datatable-scroller[@class='datatable-scroll ng-star-inserted']//span[text()='Amoxicillin 875 MG Tablet']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:36750/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: acaf2812-690c-4eea-bcb4-b38b1f67f443
*** Element info: {Using=xpath, value=//datatable-scroller[@class='datatable-scroll ng-star-inserted']//span[text()='Amoxicillin 875 MG Tablet']}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at aut.bluestrata.pages.FacilityPage.CreateOrderSetDescription(FacilityPage.java:297)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA018_CreateAnOrder_ViaOrderSets(PhysicianPortalTestCases.java:999)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA018_CreateAnOrder_ViaOrderSets -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5936" started-at="2018-08-17T02:44:38Z" finished-at="2018-08-17T02:44:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA018_CreateAnOrder_ViaOrderSets status=FAILURE method=PhysicianPortalTestCases.QA018_CreateAnOrder_ViaOrderSets(org.testng.ITestContext)[pri:12, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA018_CreateAnOrder_ViaOrderSets(org.testng.ITestContext)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="34176" started-at="2018-08-17T02:44:44Z" finished-at="2018-08-17T02:45:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA019_ViewAndModifyAnOrder_ViaOrderSets(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA019_ViewAndModifyAnOrder_ViaOrderSets(org.testng.ITestContext)[pri:13, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA019_ViewAndModifyAnOrder_ViaOrderSets" duration-ms="1509885" started-at="2018-08-17T02:45:18Z" finished-at="2018-08-17T03:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with xpath == //*[text()='Create Recaps']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:47848/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 329a90c0-2bb5-40f1-bfff-d543343cf157
*** Element info: {Using=xpath, value=//*[text()='Create Recaps']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //*[text()='Create Recaps']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:47848/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 329a90c0-2bb5-40f1-bfff-d543343cf157
*** Element info: {Using=xpath, value=//*[text()='Create Recaps']}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at aut.bluestrata.pages.PhysicianPortalPage.OrderPageCopyOrderValidation(PhysicianPortalPage.java:2864)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA019_ViewAndModifyAnOrder_ViaOrderSets(PhysicianPortalTestCases.java:1178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA019_ViewAndModifyAnOrder_ViaOrderSets -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5914" started-at="2018-08-17T03:10:28Z" finished-at="2018-08-17T03:10:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA019_ViewAndModifyAnOrder_ViaOrderSets status=FAILURE method=PhysicianPortalTestCases.QA019_ViewAndModifyAnOrder_ViaOrderSets(org.testng.ITestContext)[pri:13, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA019_ViewAndModifyAnOrder_ViaOrderSets(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35398" started-at="2018-08-17T03:10:34Z" finished-at="2018-08-17T03:11:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:14, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder" duration-ms="309454" started-at="2018-08-17T03:11:09Z" finished-at="2018-08-17T03:16:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5921" started-at="2018-08-17T03:16:18Z" finished-at="2018-08-17T03:16:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder status=SUCCESS method=PhysicianPortalTestCases.QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:14, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA020_VerifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="10799143" started-at="2018-08-17T03:16:24Z" finished-at="2018-08-17T06:16:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:15, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder" duration-ms="86" started-at="2018-08-17T06:16:23Z" finished-at="2018-08-17T06:16:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: driver.version: InternetExplorerDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: driver.version: InternetExplorerDriver
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:127)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:658)
	at org.openqa.selenium.ie.InternetExplorerDriver.getScreenshotAs(InternetExplorerDriver.java:235)
	at com.testreport.ExtentReporter.takeScreenShot(ExtentReporter.java:299)
	at com.testreport.ExtentReporter.logFailure(ExtentReporter.java:169)
	at dweb.aut.pages.templates.PageTemplate.click(PageTemplate.java:166)
	at aut.bluestrata.pages.HomePage.NavigateToPhysicianPortal(HomePage.java:35)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(PhysicianPortalTestCases.java:1270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5424" started-at="2018-08-17T06:16:24Z" finished-at="2018-08-17T06:16:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder status=FAILURE method=PhysicianPortalTestCases.QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:15, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA021_VerifyAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="40517" started-at="2018-08-17T06:16:29Z" finished-at="2018-08-17T06:17:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:17, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder" duration-ms="382889" started-at="2018-08-17T06:17:09Z" finished-at="2018-08-17T06:23:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:11974/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 087e4314-c647-4736-a88f-9422e864d8f2
*** Element info: {Using=id, value=libraryCreate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:11974/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 087e4314-c647-4736-a88f-9422e864d8f2
*** Element info: {Using=id, value=libraryCreate}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at dweb.aut.pages.templates.PageTemplate.SendKeysToElementClearFirst(PageTemplate.java:525)
	at aut.bluestrata.pages.PhysicianPortalPage.CreateAnOrderWithOrderDetails(PhysicianPortalPage.java:392)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(PhysicianPortalTestCases.java:1434)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5892" started-at="2018-08-17T06:23:32Z" finished-at="2018-08-17T06:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder status=FAILURE method=PhysicianPortalTestCases.QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:17, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA023_ViewAndModifyAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="36272" started-at="2018-08-17T06:23:38Z" finished-at="2018-08-17T06:24:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:18, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder" duration-ms="383173" started-at="2018-08-17T06:24:15Z" finished-at="2018-08-17T06:30:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:11650/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: e0db246f-3853-401c-b808-c53fc4991cc0
*** Element info: {Using=id, value=libraryCreate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:11650/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: e0db246f-3853-401c-b808-c53fc4991cc0
*** Element info: {Using=id, value=libraryCreate}
	at sun.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at dweb.aut.pages.templates.PageTemplate.SendKeysToElementClearFirst(PageTemplate.java:525)
	at aut.bluestrata.pages.PhysicianPortalPage.CreateAnOrderWithOrderDetails(PhysicianPortalPage.java:392)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder(PhysicianPortalTestCases.java:1544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5948" started-at="2018-08-17T06:30:38Z" finished-at="2018-08-17T06:30:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder status=FAILURE method=PhysicianPortalTestCases.QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext)[pri:18, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA024_RecapAnOrder_ViaOrderSetsOrCreateAnOrder(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35818" started-at="2018-08-17T06:30:44Z" finished-at="2018-08-17T06:31:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets(org.testng.ITestContext)[pri:19, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets" duration-ms="382561" started-at="2018-08-17T06:31:19Z" finished-at="2018-08-17T06:37:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:23397/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 3bc4b061-27c1-4c90-aba8-c8621f4350d4
*** Element info: {Using=id, value=libraryCreate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:23397/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 3bc4b061-27c1-4c90-aba8-c8621f4350d4
*** Element info: {Using=id, value=libraryCreate}
	at sun.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at dweb.aut.pages.templates.PageTemplate.SendKeysToElementClearFirst(PageTemplate.java:525)
	at aut.bluestrata.pages.PhysicianPortalPage.CreateAnOrderWithOrderDetails(PhysicianPortalPage.java:392)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets(PhysicianPortalTestCases.java:1695)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5954" started-at="2018-08-17T06:37:42Z" finished-at="2018-08-17T06:37:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets status=FAILURE method=PhysicianPortalTestCases.QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets(org.testng.ITestContext)[pri:19, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA025_SignatureOnRecap_Wheather_OrderCreatedFromOrder_Or_FromSets(org.testng.ITestContext) throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestContext, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="beforeMethod" is-config="true" duration-ms="35928" started-at="2018-08-17T06:37:48Z" finished-at="2018-08-17T06:38:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA026_ViewAndModify_Recaps(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="QA026_ViewAndModify_Recaps(org.testng.ITestContext)[pri:20, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="QA026_ViewAndModify_Recaps" duration-ms="383041" started-at="2018-08-17T06:38:24Z" finished-at="2018-08-17T06:44:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:25418/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 4f2b9693-0348-46d3-b3a1-368fc31e81c0
*** Element info: {Using=id, value=libraryCreate}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with css selector == #libraryCreate
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'HW1562', ip: '10.11.4.33', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_111'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities [{proxy=Proxy(), acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:25418/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=false}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=WINDOWS, setWindowRect=true, platform=WINDOWS}]
Session ID: 4f2b9693-0348-46d3-b3a1-368fc31e81c0
*** Element info: {Using=id, value=libraryCreate}
	at sun.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at dweb.aut.pages.templates.PageTemplate.SendKeysToElementClearFirst(PageTemplate.java:525)
	at aut.bluestrata.pages.PhysicianPortalPage.CreateAnOrderWithOrderDetails(PhysicianPortalPage.java:392)
	at aut.tests.functionaltests.PhysicianPortalTestCases.QA026_ViewAndModify_Recaps(PhysicianPortalTestCases.java:1776)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QA026_ViewAndModify_Recaps -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterMethod" is-config="true" duration-ms="5930" started-at="2018-08-17T06:44:47Z" finished-at="2018-08-17T06:44:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=QA026_ViewAndModify_Recaps status=FAILURE method=PhysicianPortalTestCases.QA026_ViewAndModify_Recaps(org.testng.ITestContext)[pri:20, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d] output={null}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void aut.tests.functionaltests.PhysicianPortalTestCases.QA026_ViewAndModify_Recaps(org.testng.ITestContext) throws java.awt.AWTException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestContext)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterTest" is-config="true" duration-ms="401" started-at="2018-08-17T06:44:53Z" finished-at="2018-08-17T06:44:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite(org.testng.ITestContext)[pri:0, instance:aut.tests.functionaltests.PhysicianPortalTestCases@62e7f11d]" name="afterSuite" is-config="true" duration-ms="390" started-at="2018-08-17T06:44:53Z" finished-at="2018-08-17T06:44:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@67880744]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- aut.tests.functionaltests.PhysicianPortalTestCases -->
    </test> <!-- test -->
  </suite> <!-- SuiteRegression -->
</testng-results>
